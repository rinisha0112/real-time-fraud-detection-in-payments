# -*- coding: utf-8 -*-
"""FraudDetectionOneClassSVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E79TcgGhjoD4jUNSwRshTifmkMZ--fRy
"""

from sklearn.svm import OneClassSVM
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.svm import OneClassSVM

def unsupervised_learning(normal_data, anomaly_data, input_data):
    # Generate synthetic data (2D)
    # np.random.seed(42)
    # normal_data = np.random.normal(loc=0, scale=1, size=(100, 2))
    # anomaly_data = np.random.normal(loc=4, scale=1, size=(20, 2))
    # print(normal_data)
    # print(anomaly_data)

    # Combine normal and anomaly data
    data = np.vstack([normal_data, anomaly_data])

    # Create One-Class SVM model with nu parameter
    nu_value = 0.1  # Adjust this parameter based on your dataset
    model = OneClassSVM(nu=nu_value)

    # Fit the model to the data (unsupervised learning)
    model.fit(data)

    # Predict outliers/anomalies
    predictions = model.predict(input_data)

    # Anomalies are flagged as -1, normal instances as 1
    anomalies = data[predictions == -1]
    normal_instances = data[predictions == 1]

    # Print the number of anomalies detected
    print("Number of anomalies detected:", len(anomalies))

    # Print the detected anomalies
    print("Detected anomalies:")
    print(anomalies)
    print(data)

    return len(anomalies) > 0